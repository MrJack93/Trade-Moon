# -*- coding: utf-8 -*-

# =============================================================================
# –ú–û–î–£–õ–¨ –ß–¢–ï–ù–ò–Ø –≠–õ–ï–ö–¢–†–û–ù–ù–û–ô –ü–û–ß–¢–´ (EMAIL READER)
# =============================================================================
#
# –≠—Ç–æ—Ç –º–æ–¥—É–ª—å –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø–æ—á—Ç–æ–≤–æ–º—É —è—â–∏–∫—É –ø–æ –ø—Ä–æ—Ç–æ–∫–æ–ª—É IMAP,
# –ø–æ–∏—Å–∫ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –ø–∏—Å–µ–º, –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–∑ –Ω–∏—Ö —Ç–æ—Ä–≥–æ–≤—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤
# (–≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON –≤ —Ç–µ–º–µ –ø–∏—Å—å–º–∞) –∏ –∏—Ö –ø–æ—Å–ª–µ–¥—É—é—â—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É.
#
# =============================================================================


# --- –ò–º–ø–æ—Ä—Ç—ã ---
import time
import imaplib
import ssl
import email
import json
import logging
import os
import sys
import html
import re
import quopri
from logging.handlers import RotatingFileHandler

# –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
import config
from signal_handler import process_signal

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ---
# (–ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥—Ä—É–≥–∏–º –º–æ–¥—É–ª—è–º, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≤—ã–≤–æ–¥ –ª–æ–≥–æ–≤ –≤ —Ñ–∞–π–ª –∏ –∫–æ–Ω—Å–æ–ª—å)
if os.getenv("DOCKER_ENV"):
    log_directory = "/app/logs"
else:
    log_directory = "logs"
os.makedirs(log_directory, exist_ok=True)

log_file_path = os.path.join(log_directory, "email_reader.log")
file_handler = RotatingFileHandler(log_file_path, maxBytes=2_000_000, backupCount=5)
console_handler = logging.StreamHandler()

logger = logging.getLogger("email_reader")
logger.setLevel(logging.INFO)
formatter = logging.Formatter("%(asctime)s - %(levelname)s - %(filename)s:%(lineno)d - %(message)s")
file_handler.setFormatter(formatter)
console_handler.setFormatter(formatter)
logger.addHandler(file_handler)
logger.addHandler(console_handler)

logger.info("üéâ –ú–æ–¥—É–ª—å —á—Ç–µ–Ω–∏—è –ø–æ—á—Ç—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!")


def parse_email_subject(msg):
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç JSON-–¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–µ–º—ã (Subject) —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ –ø–∏—Å—å–º–∞.
    """
    subject = msg.get("Subject", "").strip()
    logger.info(f"[Email Reader] üì© –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∏—Å—å–º–∞ —Å —Ç–µ–º–æ–π: {subject}")

    # –°–∏–≥–Ω–∞–ª –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å "Alert:"
    if subject.startswith("Alert:"):
        try:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∞—Å—Ç—å —Å—Ç—Ä–æ–∫–∏, —Å–æ–¥–µ—Ä–∂–∞—â—É—é JSON
            json_part = subject.split("Alert:", 1)[1].strip()

            # –î–µ–∫–æ–¥–∏—Ä—É–µ–º HTML-—Å—É—â–Ω–æ—Å—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, &nbsp;, &zwj;)
            json_part = html.unescape(json_part)

            # –£–¥–∞–ª—è–µ–º –Ω–µ–≤–∏–¥–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã –∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            json_part = re.sub(r'[\u200B-\u200D\uFEFF]', '', json_part)  # –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–±–µ–ª–æ–≤ –Ω—É–ª–µ–≤–æ–π —à–∏—Ä–∏–Ω—ã
            json_part = json_part.replace('\n', '').replace('\r', '')  # –£–¥–∞–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫

            # –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –æ—á–∏—â–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –∫–∞–∫ JSON
            return json.loads(json_part)
        except json.JSONDecodeError as e:
            logger.error(f"[Email Reader] ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å —Ç–µ–º—É –∫–∞–∫ JSON: {e}")
    return None


def check_inbox():
    """
    –ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ IMAP-—Å–µ—Ä–≤–µ—Ä—É, —á–∏—Ç–∞–µ—Ç –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ –ø–∏—Å—å–º–∞ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–µ,
    –∫–æ—Ç–æ—Ä—ã–µ —è–≤–ª—è—é—Ç—Å—è —Ç–æ—Ä–≥–æ–≤—ã–º–∏ —Å–∏–≥–Ω–∞–ª–∞–º–∏.
    """
    try:
        logger.info("[Email Reader] üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ IMAP —Å–µ—Ä–≤–µ—Ä—É...")
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞—â–∏—â–µ–Ω–Ω–æ–µ SSL-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º STARTTLS
        if config.IMAP_USE_SSL:
            mail = imaplib.IMAP4_SSL(config.IMAP_SERVER, config.IMAP_PORT)
        else:
            context = ssl.create_default_context()
            mail = imaplib.IMAP4(config.IMAP_SERVER, config.IMAP_PORT)
            mail.starttls(ssl_context=context)

        mail.login(config.IMAP_EMAIL, config.IMAP_PASSWORD)
        mail.select("INBOX") # –í—ã–±–∏—Ä–∞–µ–º –ø–∞–ø–∫—É "–í—Ö–æ–¥—è—â–∏–µ"
        logger.info("[Email Reader] ‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å IMAP —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ.")

        # –ò—â–µ–º –≤—Å–µ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ –ø–∏—Å—å–º–∞
        status, data = mail.search(None, '(UNSEEN)')
        if status != "OK":
            logger.warning("[Email Reader] ‚ö† –ù–æ–≤—ã—Ö –ø–∏—Å–µ–º –Ω–µ—Ç –∏–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫.")
            mail.logout()
            return

        email_ids = data[0].split()
        logger.info(f"[Email Reader] üì© –ù–∞–π–¥–µ–Ω–æ {len(email_ids)} –Ω–æ–≤—ã—Ö –ø–∏—Å–µ–º.")

        for e_id in email_ids:
            try:
                # –ü–æ–ª—É—á–∞–µ–º –ø–∏—Å—å–º–æ –≤ —Ä–µ–∂–∏–º–µ "PEEK", —á—Ç–æ–±—ã –Ω–µ –ø–æ–º–µ—á–∞—Ç—å –µ–≥–æ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
                status, msg_data = mail.fetch(e_id, "(BODY.PEEK[])")
                if status == "OK":
                    raw_email = msg_data[0][1]
                    msg = email.message_from_bytes(raw_email)

                    # –î–µ–∫–æ–¥–∏—Ä—É–µ–º —Ç–µ–º—É –ø–∏—Å—å–º–∞, –µ—Å–ª–∏ –æ–Ω–∞ –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∞
                    subject = msg.get("Subject", "")
                    if msg.get_content_charset():
                        subject = subject.encode('latin-1').decode(msg.get_content_charset())
                    subject = quopri.decodestring(subject).decode('utf-8')  # –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑ Quoted-Printable

                    msg.replace_header("Subject", subject)  # –ó–∞–º–µ–Ω—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é

                    # –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –¥–∞–Ω–Ω—ã–µ —Å–∏–≥–Ω–∞–ª–∞ –∏–∑ —Ç–µ–º—ã
                    alert_data = parse_email_subject(msg)
                    if alert_data:
                        logger.info(f"[Email Reader] ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–∞: {alert_data}")

                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º PIN-–∫–æ–¥, –µ—Å–ª–∏ –æ–Ω —Ç—Ä–µ–±—É–µ—Ç—Å—è –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
                        if config.WEBHOOK_PIN:
                            incoming_pin = alert_data.get("PIN", "")
                            if incoming_pin != config.WEBHOOK_PIN:
                                logger.warning(f"[Email Reader] ‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π PIN –≤ —Å–∏–≥–Ω–∞–ª–µ –∏–∑ –ø–∏—Å—å–º–∞: {incoming_pin}")
                                continue # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –ø–∏—Å—å–º—É

                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É
                        process_signal(alert_data)
                        # –ü–æ–º–µ—á–∞–µ–º –ø–∏—Å—å–º–æ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –±—ã–ª —Ç–æ—Ä–≥–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª.
                        mail.store(e_id, "+FLAGS", "\\Seen")
                    else:
                        # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ —Ç–æ—Ä–≥–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª, –æ—Å—Ç–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–º.
                        logger.info("[Email Reader] üìå –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –Ω–µ—Ç–æ—Ä–≥–æ–≤–æ–µ –ø–∏—Å—å–º–æ, –æ—Å—Ç–∞–≤–ª—è–µ–º –µ–≥–æ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–º.")
            except Exception as e:
                logger.error(f"[Email Reader] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–∏—Å—å–º–∞ {e_id}: {e}")

        mail.logout()
        logger.info("[Email Reader] ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–∏—Å–µ–º.")
    except imaplib.IMAP4.error as e:
        logger.error(f"[Email Reader] ‚ùå –û—à–∏–±–∫–∞ IMAP: {e}")
    except Exception as e:
        logger.error(f"[Email Reader] ‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")


def run_email_reader():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –º–æ–¥—É–ª—å —á—Ç–µ–Ω–∏—è –ø–æ—á—Ç—ã –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º —Ü–∏–∫–ª–µ."""
    logger.info("[Email Reader] üöÄ –ó–∞–ø—É—Å–∫ –º–æ–¥—É–ª—è —á—Ç–µ–Ω–∏—è –ø–æ—á—Ç—ã...")
    try:
        while True:
            check_inbox()
            # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ –ø–æ—á—Ç–æ–≤–æ–≥–æ —è—â–∏–∫–∞.
            time.sleep(config.IMAP_CHECK_INTERVAL)
    except KeyboardInterrupt:
        logger.info("[Email Reader] üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä—É—á–Ω—É—é.")
    except Exception as e:
        logger.error(f"[Email Reader] ‚ùå –§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")


# --- –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ---
# –≠—Ç–æ—Ç –±–ª–æ–∫ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é.
if __name__ == "__main__":
    run_email_reader()
