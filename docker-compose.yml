# =============================================================================
# DOCKER COMPOSE КОНФИГУРАЦИЯ
# =============================================================================
#
# Этот файл определяет, как Docker должен собирать и запускать контейнер
# с приложением. Он описывает сервисы, сети, порты и другие параметры.
#
# =============================================================================

# Версия синтаксиса файла.
# Примечание: В современных версиях Docker Compose этот атрибут является устаревшим и игнорируется.
version: "3.8"

# --- Определение сервисов ---
# Блок `services` содержит описание всех контейнеров, которые будут запущены.
services:
  # Название сервиса. Может быть любым, используется для управления через docker-compose.
  tradex_app:
    # --- Сборка образа ---
    # `build: .` указывает Docker собрать образ из Dockerfile, находящегося в текущей директории.
    build: .

    # --- Имя контейнера ---
    # Задает кастомное, легко узнаваемое имя для контейнера.
    container_name: tradex_container

    # --- Политика перезапуска ---
    # `unless-stopped`: Автоматически перезапускать контейнер при сбоях,
    # но не после того, как он был остановлен вручную.
    restart: unless-stopped

    # --- Файл с переменными окружения ---
    # `env_file` указывает, что переменные окружения для контейнера
    # нужно загрузить из файла `.env` в корне проекта.
    env_file:
      - .env

    # --- Дополнительные переменные окружения ---
    # Позволяет задать переменные окружения напрямую.
    environment:
      # Устанавливает временную зону внутри контейнера.
      - TZ=Europe/Kyiv

    # --- Проброс портов ---
    # `ports` связывает порты хост-машины с портами внутри контейнера.
    # Формат: "ХОСТ:КОНТЕЙНЕР"
    ports:
      - "5000:5000"  # Проброс порта для панели управления (Dashboard).
      - "5005:5005"  # Проброс порта для входящих веб-хуков (Webhook).

    # --- Подключение томов (закомментировано) ---
    # `volumes` используется для синхронизации файлов/папок между хост-машиной и контейнером.
    # Это полезно для разработки, чтобы изменения в коде сразу отражались в контейнере.
    # В данном случае закомментировано, так как код копируется при сборке образа.
    #volumes:
    #  - .:/app  # Синхронизация всего проекта с папкой /app внутри контейнера.
    #  - ./logs:/var/log # Пример подключения папки логов.
    #  - ./logs:/app/logs # Пример подключения папки логов.

    # --- Команда для запуска ---
    # Команда, которая выполняется при старте контейнера.
    # Здесь запускается `supervisord`, который, в свою очередь, управляет
    # запуском и мониторингом нескольких процессов внутри контейнера (веб-сервер, воркеры).
    command: /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf
