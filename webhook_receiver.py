# -*- coding: utf-8 -*-

# =============================================================================
# –ü–†–ò–ï–ú–ù–ò–ö –í–ï–ë-–•–£–ö–û–í (WEBHOOK RECEIVER)
# =============================================================================
#
# –≠—Ç–æ—Ç –º–æ–¥—É–ª—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –ø—Ä–æ—Å—Ç–æ–µ Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–µ
# –¥–ª—è –ø—Ä–∏–µ–º–∞ –≤—Ö–æ–¥—è—â–∏—Ö HTTP POST-–∑–∞–ø—Ä–æ—Å–æ–≤ (–≤–µ–±-—Ö—É–∫–æ–≤), –Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç TradingView.
#
# –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏:
# 1. –ü—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ `/webhook`.
# 2. –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥—è—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö (–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è JSON –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ PIN-–∫–æ–¥–∞).
# 3. –ü–µ—Ä–µ–¥–∞—á–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (—Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞) –≤ `signal_handler`
#    –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏.
#
# =============================================================================

import os
import logging
from logging.handlers import RotatingFileHandler
from flask import Flask, request, jsonify
import json
import config
from signal_handler import process_signal

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ---
# (–ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥—Ä—É–≥–∏–º –º–æ–¥—É–ª—è–º, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≤—ã–≤–æ–¥ –ª–æ–≥–æ–≤ –≤ —Ñ–∞–π–ª –∏ –∫–æ–Ω—Å–æ–ª—å)
if os.getenv("DOCKER_ENV"):
    log_directory = "/app/logs"
else:
    log_directory = "logs"
os.makedirs(log_directory, exist_ok=True)
log_file_path = os.path.join(log_directory, "webhook.log")
file_handler = RotatingFileHandler(log_file_path, maxBytes=2_000_000, backupCount=5)
console_handler = logging.StreamHandler()

logger = logging.getLogger("webhook")
logger.setLevel(logging.INFO)
formatter = logging.Formatter("%(asctime)s - %(levelname)s - %(filename)s:%(lineno)d - %(message)s")
file_handler.setFormatter(formatter)
console_handler.setFormatter(formatter)
logger.addHandler(file_handler)
logger.addHandler(console_handler)

logger.info("üéâ –ü—Ä–∏–µ–º–Ω–∏–∫ –≤–µ–±-—Ö—É–∫–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!")

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ---
app = Flask(__name__)

# --- –û—Å–Ω–æ–≤–Ω–æ–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–∏–µ–º–∞ –≤–µ–±-—Ö—É–∫–æ–≤ ---
@app.route("/webhook", methods=["POST"])
def trade_signal():
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ POST-–∑–∞–ø—Ä–æ—Å—ã –Ω–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç /webhook.
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º JSON-–¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞.
        data = request.json
        if data is None:
            logger.warning("–ü–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π JSON-–∑–∞–ø—Ä–æ—Å.")
            return jsonify({"error": "No JSON data"}), 400

        # --- –í–∞–ª–∏–¥–∞—Ü–∏—è PIN-–∫–æ–¥–∞ ---
        # –ï—Å–ª–∏ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∑–∞–¥–∞–Ω WEBHOOK_PIN, –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
        # —Å PIN-–∫–æ–¥–æ–º, –ø—Ä–∏—à–µ–¥—à–∏–º –≤ –∑–∞–ø—Ä–æ—Å–µ. –≠—Ç–æ –±–∞–∑–æ–≤—ã–π –º–µ—Ö–∞–Ω–∏–∑–º –∑–∞—â–∏—Ç—ã.
        incoming_pin = data.get("PIN", "")
        if config.WEBHOOK_PIN and incoming_pin != config.WEBHOOK_PIN:
            logger.warning("–ü–æ–ª—É—á–µ–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π PIN-–∫–æ–¥ –¥–ª—è –≤–µ–±-—Ö—É–∫–∞.")
            return jsonify({"error": "Invalid pin"}), 403 # 403 Forbidden - –¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω.

        logger.info(f"–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç –≤–µ–±-—Ö—É–∫–∞: {data}")
        # –ï—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, –ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤.
        process_signal(data)

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç.
        return jsonify({"status": "ok"}), 200
    except json.JSONDecodeError:
        logger.error("–ü–æ–ª—É—á–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON –≤ —Ç–µ–ª–µ –≤–µ–±-—Ö—É–∫–∞.")
        return jsonify({"error": "Malformed JSON"}), 400 # 400 Bad Request - –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å.
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–µ–±-—Ö—É–∫–∞: {e}")
        return jsonify({"error": str(e)}), 500 # 500 Internal Server Error - –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞.
